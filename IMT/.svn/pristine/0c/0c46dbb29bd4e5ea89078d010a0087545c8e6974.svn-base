package com.imt.sys.controller;


import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.ibatis.annotations.Param;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import com.imt.pat.entity.patientEntity;
import com.imt.sys.entity.DepartmentEntity;
import com.imt.sys.entity.JobEntity;
import com.imt.sys.entity.PageLimit;
import com.imt.sys.entity.PageLimitAll;
import com.imt.sys.entity.SysUserEntity;
import com.imt.sys.service.SysUserService;

@Controller
public class SysMenuManageController {
	private SysUserEntity sysUserEntity=new SysUserEntity();
	private PageLimit pageLimit=new PageLimit();
	private PageLimitAll pageLimitAll=new PageLimitAll();
	@Autowired
	private SysUserService sysUserService;
	
	/*
	 * 跳转到添加员工界面，包含职位，部门信息
	 * */
	@RequestMapping(value="/addEmployeejump")
	public String addEmployeejump(Model mod){
		  List<DepartmentEntity> queryAllDep = sysUserService.queryAllDep();
		mod.addAttribute("department", queryAllDep);
		List<JobEntity> queryJob=sysUserService.queryAllJob();
		mod.addAttribute("job", queryJob);
		return "addEmployee";
	}
	/*
	 * 信息录入跳转,传入所有人员信息
	 * */
	@RequestMapping(value="/Template/find")
	public String find(HttpServletRequest request,Model mod){
		Integer id=(Integer) request.getSession().getAttribute("currSysUserId");
		String name=(String) request.getSession().getAttribute("currsysuser");
		sysUserEntity.setSys_user_Cname(name);
		sysUserEntity.setSys_user_id(id);
		mod.addAttribute("Cuser", sysUserEntity);
		List<SysUserEntity> queryAllEmp = sysUserService.queryAllEmp();
		mod.addAttribute("allUser", queryAllEmp);
		return "find";
		
	}
	/*
	 * 管理员添加新员工
	 * */
	@RequestMapping(value="/Template/addEmployee",method=RequestMethod.POST)
	public void addEmployee(HttpServletRequest request,HttpServletResponse response ) throws IOException{
		System.out.println("zoujinlaile+++++");
		String username=request.getParameter("uname");
		String password=request.getParameter("pword");
		String sys_user_Cname=request.getParameter("Cname");
		String jobId=request.getParameter("job");
		int jId=Integer.parseInt(jobId);
		String depId=request.getParameter("department");
		int dId=Integer.parseInt(depId);
		sysUserEntity.setSys_user_name(username);
		sysUserEntity.setSys_user_password(password);
		sysUserEntity.setSys_user_Cname(sys_user_Cname);
		sysUserEntity.setDepartment_id(dId);
		sysUserEntity.setJob_id(jId);
		sysUserEntity.setSys_user_state(0);
		sysUserEntity.setSys_user_id(0);
		sysUserEntity.setSys_user_able(0);
		SysUserEntity querySysUser=sysUserService.querySysUserByname(sysUserEntity);
		response.setCharacterEncoding("utf-8");
		if(null!=querySysUser&&querySysUser.getSys_user_isDel()==0){
			System.out.println("添加失敗");
			response.getWriter().write("errorno");
		}else{
			 sysUserEntity.setSys_user_isDels(0);
			 int addEmployee = sysUserService.addEmployee(sysUserEntity);
			 System.out.println("添加成功==="+addEmployee);
			 response.getWriter().write("success");
		}
	}
	
	/*
	 * 员工查询all
	 * */
	@RequestMapping(value="/queryAllEmployee",method=RequestMethod.GET)
	public String queryAllEmployee( HttpServletRequest request,
			@RequestParam("pindex") int pindex,
			@RequestParam("pcount") int pcount,
			Model model){
		int offset=(pindex-1)*5;
		int startlimit=5;
		pageLimit.setOffset(offset);
		pageLimit.setStartlimit(startlimit);
		System.out.println("pianyi======="+startlimit+offset);
		List<SysUserEntity> queryAllEmployee = sysUserService.queryAllEmployee(pageLimit);
		
		//写一个查询总记录
		int queryEmployeeCount = sysUserService.queryEmployeeCount();
		int currpage=queryEmployeeCount/startlimit;
		int spagesize=queryEmployeeCount%5;
		int nowpage=0;
		if(spagesize==0){
				nowpage=currpage;
		}else{
			nowpage=currpage+1;
		}
		//设置分页信息
		pageLimitAll.setPindex(pindex);
		pageLimitAll.setPcount( queryEmployeeCount);
		pageLimitAll.setPtotalpages(nowpage);
		pageLimitAll.setPsize(startlimit);
		request.setAttribute("page", pageLimitAll); 
		model.addAttribute("sysuserQuery", queryAllEmployee);
		System.out.println("count========="+queryEmployeeCount);
		return "querySysUser";
	}
	
	
	/*
	 * 员工查询byCname
	 * */
	@RequestMapping(value="/queryEmployeeByCname",method=RequestMethod.GET)
	public String queryEmployeeByCname(@RequestParam("querybyname") String userCname,Model model){
		sysUserEntity.setSys_user_Cname(userCname);
		sysUserEntity.setSys_user_isDels(0);
		SysUserEntity querySysUser = sysUserService.querySysUserByCname(sysUserEntity);
		List<SysUserEntity> querySysUser1=new ArrayList<SysUserEntity>();
		if(null!=querySysUser){
		querySysUser1.add(querySysUser);
		}
			model.addAttribute("sysuserQuery", querySysUser1);
			return "querySysUser";
	}
	
	/*
	 * 跳转到修改资料页面
	 * 
	 * */
	@RequestMapping(value="/updateEmployee",method=RequestMethod.GET)
	public String jumpUpdateEmployee(HttpServletRequest request,
			@RequestParam("id") String id,
			Model model){
		int iid=Integer.parseInt(id);
		sysUserEntity.setSys_user_id(iid);
		SysUserEntity querySysUserById = sysUserService.querySysUserById(sysUserEntity);
		sysUserEntity.setSys_user_Cname(querySysUserById.getSys_user_Cname());
		sysUserEntity.setSys_user_name(querySysUserById.getSys_user_name());
		sysUserEntity.setSys_user_password(querySysUserById.getSys_user_password());
		model.addAttribute("updateuser",sysUserEntity );
		return "updateEmployee";
	}
	
	/*
	 * 修改员工资料
	 * */
	@RequestMapping(value="/updateEmp",method=RequestMethod.POST)
	public String updateEmp(
			@RequestParam("sys_user_Cname") String Cname,
			@RequestParam("sys_user_name") String name,
			@RequestParam("sys_user_password") String password,
			@RequestParam("sys_user_Yname") String Yname
			){
			sysUserEntity.setSys_user_Cname(Yname);
			sysUserEntity.setSys_user_isDels(0);
			SysUserEntity querySysUserByCname = sysUserService.querySysUserByCname(sysUserEntity);
			querySysUserByCname.setSys_user_Cname(Cname);
			querySysUserByCname.setSys_user_name(name);
			querySysUserByCname.setSys_user_password(password);
			sysUserService.updateEmpName(querySysUserByCname);
		return "test";
	}
	/*
	 * 删除员工
	 * */
	@RequestMapping(value="/deleteSysUser",method=RequestMethod.POST)
	public void deleteSysUser(HttpServletRequest req,HttpServletResponse resp) throws IOException{
		String ids = req.getParameter("ids");
		System.out.println("ids==============="+ids);
		String[] sids = ids.split(",");
		System.out.println(sids[0]);
		int[]  iids=new int[10];
		for(int i=0;i<sids.length;i++){
			System.out.println(sids[i]);
			int a=Integer.parseInt(sids[i]);
			iids[i]=a;
		}
		int deleteSysUser = sysUserService.deleteSysUser(iids);
		System.out.println("刪除了=========="+deleteSysUser);
		resp.setCharacterEncoding("utf-8");
		if(deleteSysUser>0){
			resp.getWriter().write("success");
		}else{
			resp.getWriter().write("error");
		}
	}
	//禁用/恢复员工
	@RequestMapping(value="/disableSysUser",method=RequestMethod.POST)
	public void disableSysUser(HttpServletRequest req,HttpServletResponse resp) throws IOException{
		String id = req.getParameter("id");
		int ids=Integer.parseInt(id);
		sysUserEntity.setSys_user_id(ids);
		String able=req.getParameter("able");
		int ables=Integer.parseInt(able);
		sysUserEntity.setSys_user_able(ables);
		int disableSysUser = sysUserService.disableSysUser(sysUserEntity);
		resp.setCharacterEncoding("utf-8");
		if(disableSysUser>0){
			resp.getWriter().write("success");
		}else{
			resp.getWriter().write("error");
		}
	}
}
